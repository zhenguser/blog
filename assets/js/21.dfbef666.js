(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{237:function(s,t,a){"use strict";a.r(t);var e=a(19),i=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[s._v("#")]),s._v(" Git")]),s._v(" "),a("h2",{attrs:{id:"git基本指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git基本指令"}},[s._v("#")]),s._v(" Git基本指令")]),s._v(" "),a("h3",{attrs:{id:"_1-git基本配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-git基本配置"}},[s._v("#")]),s._v(" 1. Git基本配置")]),s._v(" "),a("p",[s._v("git config可以配置git的参数，可以使用git config --list查看已经配置的git参数。其中有三个级别的保存位置，--system、--global、--local，分别表示所有用户（本系统）、当前用户（全局）、本地配置（当前目录），默认使用--local。")]),s._v(" "),a("ul",[a("li",[a("ol",[a("li",[s._v("配置用户名及邮箱"),a("br"),s._v("\n在使用Git提交前，必须配置用户名和邮箱，这些信息会永久保存到历史记录中。")])])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('git config --global user.name "niuniu"\ngit config --global user.email zyvj@qq.com\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[a("ol",{attrs:{start:"2"}},[a("li",[s._v("其他配置"),a("br"),s._v("\n文本编辑器配置\n接下来要设置的是默认使用的文本编辑器。Git 需要你输入一些额外消息的时候，会自动调用一个外部文本编辑器给你用。默认会使用操作系统指定的默认编辑器，一般可能会是 Vi 或者 Vim。如果你有其他偏好，比如 Emacs 的话，可以重新设置：")])])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git config --global core.editor emacs\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("ol",{attrs:{start:"3"}},[a("li",[s._v("差异分析工具"),a("br"),s._v("\n在解决合并冲突时使用哪种差异分析工具。比如要改用 vimdiff 的话：")])])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git config --global merge.tool vimdiff\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Git 可以理解 kdiff3，tkdiff，meld，xxdiff，emerge，vimdiff，gvimdiff，ecmerge，和 opendiff 等合并工具的输出信息。当然，你也可以指定使用自己开发的工具。")]),s._v(" "),a("h3",{attrs:{id:"_2-创建git仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建git仓库"}},[s._v("#")]),s._v(" 2. 创建Git仓库")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git init\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_3-获得git仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-获得git仓库"}},[s._v("#")]),s._v(" 3. 获得Git仓库")]),s._v(" "),a("p",[s._v("如果需要克隆远程仓库，可以使用git clone，比如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git clone https://git.xxxx\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_4-提交更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-提交更新"}},[s._v("#")]),s._v(" 4. 提交更新")]),s._v(" "),a("ul",[a("li",[a("ol",[a("li",[s._v("将代码放入暂存区")])])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git add ./readme.me\t\t将指定文件放到暂存区\ngit add ./\t\t将所有修改和新建的文件放到暂存区\ngit add *.cpp        # add all cpp files\ngit add /home/code/  # add all files in /home/code\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[a("ol",{attrs:{start:"2"}},[a("li",[s._v("将代码放入版本库")])])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('git commit --m "说明"\t将暂存区的代码提交到版本库\ngit commit -all -m "说明"\t将当前工作区和暂存区的所有文件提交到版本库\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[a("ol",{attrs:{start:"3"}},[a("li",[s._v("查看当前状态")])])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git status\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_5-提交历史查看"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-提交历史查看"}},[s._v("#")]),s._v(" 5. 提交历史查看")]),s._v(" "),a("p",[s._v("可以使用git log查看当前工程的所有提交的日志。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git log\t\t查看历史提交的日志\ngit log --online\t\t查看简介版的日志\ngit log --stat      # 仅显示摘要选项\ngit log --pretty=oneline        # 定制记录格式\ngit log --graph     # 图像化分支和版本更新\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"_6-撤销更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-撤销更新"}},[s._v("#")]),s._v(" 6. 撤销更新")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git reset --hard HEAD~0\t\t回退到上一次提交代码的状态\ngit reset --hard HEAD~1\t\t回退到上上次提交代码的状态\ngit reset --hard HEAD [版本号]\t\t回退到指定版本号\ngit reflog\t\t可以查看每一次切换版本的记录以及所有的版本号\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"_7-远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-远程仓库"}},[s._v("#")]),s._v(" 7. 远程仓库")]),s._v(" "),a("p",[s._v("可以使用git remote查看当前的远程库。\ngit remote -v可以显示对应的克隆地址。（对于多个远程仓库很有用）")]),s._v(" "),a("p",[s._v("添加远程仓库")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git remote add [short_name] [url]可以添加新的远程仓库\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("从远程仓库抓取数据\ngit fetch [remote-name]可以从远程仓库抓取数据到本地。\n也可以使用git pull")]),s._v(" "),a("p",[s._v("推送数据到远程仓库")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git push <远程主机名> <本地分支名>:<远程分支名>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v('如果省略远程分支名，则表示将本地分支推送与之存在"追踪关系"的远程分支（通常两者同名），如果该远程分支不存在，则会被新建')]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git push origin master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#慎用！删除远程仓库的分支\ngit push origin :master\n# 等同于\ngit push origin --delete master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("如果当前分支与远程分支之间存在追踪关系，则本地分支和远程分支都可以省略")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git push origin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果当前分支只有一个追踪分支，那么主机名都可以省略")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git push\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果当前分支与多个主机存在追踪关系，则可以使用-u选项指定一个默认主机，这样后面就可以不加任何参数使用git push")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git push -u origin master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("上面命令将本地的master分支推送到origin主机，同时指定origin为默认主机，后面就可以不加任何参数使用git push了。")]),s._v(" "),a("p",[s._v("查看远程仓库信息")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git remote show origin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("远程仓库的删除和重命名")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git remote rename [old_name] [new_name]\ngit remote rm [remote_name]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_8-打tags"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-打tags"}},[s._v("#")]),s._v(" 8. 打Tags")]),s._v(" "),a("p",[s._v("可使用git tag显示当前库中的标签。")]),s._v(" "),a("p",[s._v('添加标签（含附注）\ngit tag -a v0.1 -m "my version 0.1"\n使用如下命令查看Tag日志信息（指定对应标签的名字）\ngit show v0.1\n也可使用SHA-1的提交表示创建tag：\ngit tag -a v0.2 [SHA-1] -m "my version 0.2"')]),s._v(" "),a("p",[s._v("分享标签\n默认的，git push不会推送标签信息到远程仓库，需要通过命令显式推送。\ngit push origin v0.1\n如果需要推送所有标签，使用\ngit push origin --tags")]),s._v(" "),a("h3",{attrs:{id:"_9-git分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-git分支"}},[s._v("#")]),s._v(" 9. Git分支")]),s._v(" "),a("ol",[a("li",[s._v("显示所有分支")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git branch\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("创建分支")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git breach dev\t\t创建一个叫dev的分支\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("切换分支")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git checkout dev\t\t切换为dev分支\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[s._v("合并分支")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git merge dev\t\t回到master分支，执行合并命令，进行合并\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"5"}},[a("li",[s._v("删除分支")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git breanch -d dev\t\t回到master分支，执行删除分支命令，删除dev分支\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("例如")]),s._v("：\n创建及切换分支\n可以使用下面命令直接切换并创建分支")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git checkout -b testing\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("等价于")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git branch testing    # 创建testing 分支\n$ git checkout testing  # 切换到testing分支\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("注意切换分支时请保持工作目录没有未提交的修改。Git鼓励使用分支，处理完问题之后合并分支即可。")]),s._v(" "),a("p",[s._v("分支合并\n将hotfix分支合并到master（主分支）上，需要通过下面命令：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git checkout master\n$ git merge hotfix\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("合并之后可以使用git branch -d hotfix删除分支。\n如果合并时存在冲突，需要手工修改。")]),s._v(" "),a("h3",{attrs:{id:"_10-远程仓库管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-远程仓库管理"}},[s._v("#")]),s._v(" 10. 远程仓库管理")]),s._v(" "),a("p",[s._v("修改仓库名\n一般来讲，默认情况下，在执行clone或者其他操作时，仓库名都是 origin 如果说我们想给他改改名字，比如我不喜欢origin这个名字，想改为 oschina 那么就要在仓库目录下执行命令:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git remote rename origin oschina\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这样 你的远程仓库名字就改成了oschina，同样，以后推送时执行的命令就不再是 git push origin master 而是 git push oschina master 拉取也是一样的")]),s._v(" "),a("p",[s._v("添加一个仓库\n在不执行克隆操作时，如果想将一个远程仓库添加到本地的仓库中，可以执行")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git remote add origin  仓库地址\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("注意: 1.origin是你的仓库的别名 可以随便改，但请务必不要与已有的仓库别名冲突 2. 仓库地址一般来讲支持 http/https/ssh/git协议，其他协议地址请勿添加")]),s._v(" "),a("p",[s._v("查看当前仓库对应的远程仓库地址")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git remote -v\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这条命令能显示你当前仓库中已经添加了的仓库名和对应的仓库地址，通常来讲，会有两条一模一样的记录，分别是fetch和push，其中fetch是用来从远程同步 push是用来推送到远程")]),s._v(" "),a("p",[s._v("修改仓库对应的远程仓库地址")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git remote set-url origin 仓库地址\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);t.default=i.exports}}]);